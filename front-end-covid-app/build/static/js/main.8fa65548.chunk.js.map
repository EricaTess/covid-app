{"version":3,"sources":["components/RatingForm.js","components/Reviews.js","components/Ratings.js","components/ClinicInfo.js","components/NavBar.js","components/GoogleMap.js","components/SignUp.js","components/UserLogin.js","App.js","index.js"],"names":["RatingForm","props","className","Typography","component","Rating","name","concat","place_id","value","reviews","overall_score","readOnly","mask_score","clean_score","six_ft_score","glove_score","TextField","id","multiline","text_review","rows","variant","disabled","Reviews","useState","setReviews","useEffect","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","jsx","length","map","review","push","getReviews","Ratings","overallScore","setOverallScore","maskScore","setMaskScore","cleanScore","setCleanScore","sixFtScore","setSixFtScore","gloveScore","setGloveScore","textReview","setTextReview","onChange","event","preventDefault","target","defaultValue","onClick","userId","localStorage","getItem","user_id","res","ClinicInfo","leaveReview","setLeaveReview","showReviews","setShowReviews","address","phone","undefined","hours","layoutHours","href","website","Box","mb","borderColor","precision","e","NavBar","to","clear","INITIAL_LOCATION","lat","lng","markers","GoogleMap","getGeoLocation","navigator","geolocation","getCurrentPosition","position","setState","prevState","currentLocation","coords","latitude","longitude","createGoogleMap","window","google","maps","Map","googleMapRef","current","zoom","center","state","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","fullscreenControl","createSearchBox","input","document","getElementById","autocomplete","places","Autocomplete","googleMap","controls","ControlPosition","TOP_CENTER","bindTo","setFields","addListener","place","getPlace","geometry","bounds","LatLngBounds","viewport","union","extend","location","deleteMarker","createPlaces","fitBounds","setMapOnAll","i","setMap","request","query","clinics","infoWindow","InfoWindow","forEach","marker","service","PlacesService","textSearch","results","status","PlacesServiceStatus","OK","Marker","setContent","formatted_address","open","detailsRequest","placeId","fields","getDetails","clinicId","redirect","React","createRef","googleMapScript","createElement","src","appendChild","this","addEventListener","search","clinicInfo","opening_hours","key","class","formatted_phone_number","weekday_text","photo","Divider","type","placeholder","ref","style","height","width","Component","SignUp","onSubmit","history","newUser","username","email","password","setItem","loggedIn","errors","noValidate","htmlFor","UserLogin","user","alert","App","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.8fa65548.chunk.js","sourcesContent":["import React from 'react';\nimport { Rating } from '@material-ui/lab';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\n\nexport default function RatingForm(props) {\n\n    return (\n        <div className=\"rating-form\">\n            <Typography component=\"legend\">Overall Score</Typography>\n            <Rating\n                name={\"overall-score|\".concat(props.place_id)}\n                value={props.reviews.overall_score}\n                readOnly\n            />\n            <Typography component=\"legend\">Mask Requirement</Typography>\n            <Rating\n                name={\"mask-usage|\".concat(props.place_id)}\n                value={props.reviews.mask_score}\n                readOnly\n            />\n            <Typography component=\"legend\">Hand Sanitizer Availibility</Typography>\n            <Rating\n                name={\"cleanliness|\".concat(props.place_id)}\n                value={props.reviews.clean_score}\n                readOnly\n            />\n            <Typography component=\"legend\">Six Foot Distancing</Typography>\n            <Rating\n                name={\"six-foot-distancing|\".concat(props.place_id)}\n                value={props.reviews.six_ft_score}\n                readOnly\n            />\n            <Typography component=\"legend\">Proper PPE</Typography>\n            <Rating\n                name={\"glove-usage|\".concat(props.place_id)}\n                value={props.reviews.glove_score}\n                readOnly\n            /><br/>\n            <TextField \n                id=\"text-review\" \n                multiline\n                value={props.reviews.text_review}\n                rows={4}\n                variant=\"outlined\" \n                disabled\n            />\n        </div>\n    )\n\n}","import React, {useState, useEffect} from 'react';\n\nimport RatingForm from './RatingForm';\n\nexport default function Reviews(props) {\n\n    const [reviews, setReviews] = useState([])\n\n    useEffect(() => {\n        fetch('/ratings-by-clinic', {\n            method: 'POST',\n            headers:{\n                \"content_type\":\"application/json\",\n            },\n            body: JSON.stringify(props.place_id),\n        })\n          .then(response => response.json())\n          .then(data => {\n            console.log(data)\n            setReviews(data)\n            })\n    }, [])\n\n\n    const getReviews = () => {\n        console.log('in getReviews', reviews)\n        const jsx = []\n        if (reviews & reviews.length === 0) {\n            return (\n                <div>\n                    <ul>\n                        <li>\n                            No reviews! Rate this clinic.\n                        </li>\n                    </ul>\n                </div>\n            )\n        }\n        reviews.map((review) => {\n            jsx.push(\n                <div>\n                    <ul>\n                        <li>\n                          <RatingForm reviews={review}/> \n                        </li>\n                    </ul>\n                </div>\n            )\n        }) \n        return jsx;\n    }\n\n\n    return(\n        <div>\n            {getReviews()}\n        </div>\n    )\n\n}","import React, { useState } from 'react';\nimport { Rating } from '@material-ui/lab';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\n\nexport default function Ratings(props) {\n\n    const [overallScore, setOverallScore] = useState('')\n    const [maskScore, setMaskScore] = useState('')\n    const [cleanScore, setCleanScore] = useState('')\n    const [sixFtScore, setSixFtScore] = useState('')\n    const [gloveScore, setGloveScore] = useState('')\n    const [textReview, setTextReview] = useState('')\n\n\n    const handleOverallRating = (event) => {\n        event.preventDefault()\n        setOverallScore(event.target.value)\n    }\n    \n    const handleMaskRating = (event) => {\n        event.preventDefault()\n        setMaskScore(event.target.value)\n    }\n\n    const handleCleanRating = (event) => {\n        event.preventDefault()\n        setCleanScore(event.target.value)\n    }\n\n    const handleSixFtRating = (event) => {\n        event.preventDefault()\n        setSixFtScore(event.target.value)\n    }\n\n    const handleGloveRating = (event) => {\n        event.preventDefault()\n        setGloveScore(event.target.value)\n    }\n\n    const handleTextReview = (event) => {\n        event.preventDefault()\n        setTextReview(event.target.value)\n    }\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        const userId = localStorage.getItem('user_id')\n\n        const data = {\n            overall_score: overallScore,\n            mask_score: maskScore,\n            clean_score: cleanScore,\n            six_ft_score: sixFtScore,\n            glove_score: gloveScore,\n            text_review: textReview,\n            place_id: props.place_id,\n            user_id: userId\n        };\n\n        fetch('/ratings', {\n            method: 'POST',\n            headers:{\n                \"content_type\":\"application/json\",\n            },\n            body: JSON.stringify(data),\n        })\n          .then(response => response.json())\n          .then(res => {\n              console.log(res);\n            });\n    }\n\n\n  return (\n    <div className=\"rating-form\">\n            <Typography component=\"legend\">Overall Score</Typography>\n            <Rating\n                name={\"overall-score|\".concat(props.place_id)}\n                onChange={handleOverallRating}\n            />\n            <Typography component=\"legend\">Mask Requirement</Typography>\n            <Rating\n                name={\"mask-usage|\".concat(props.place_id)}\n                onChange={handleMaskRating}\n            />\n            <Typography component=\"legend\">Hand Sanitizer Availibility</Typography>\n            <Rating\n                name={\"cleanliness|\".concat(props.place_id)}\n                onChange={handleCleanRating}\n            />\n            <Typography component=\"legend\">Six Foot Distancing</Typography>\n            <Rating\n                name={\"six-foot-distancing|\".concat(props.place_id)}\n                onChange={handleSixFtRating}\n            />\n            <Typography component=\"legend\">Proper PPE</Typography>\n            <Rating\n                name={\"glove-usage|\".concat(props.place_id)}\n                onChange={handleGloveRating}\n            /><br/>\n            <TextField \n                id=\"text-review\" \n                multiline\n                rows={4}\n                defaultValue={\"Leave a Review\"}\n                variant=\"outlined\" \n                onChange={handleTextReview}/><br/>\n            <button className=\"btn btn-primary btn-block\" \n                    onClick={handleSubmit}>Submit Review</button>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { Rating } from '@material-ui/lab';\n\nimport Reviews from './Reviews';\nimport Ratings from './Ratings';\n\n\nexport default function ClinicInfo(props) {\n    const [value] = useState(5)\n    const [leaveReview, setLeaveReview] = useState(false);\n    const [showReviews, setShowReviews] = useState(false);\n    \n\n    const displayReviewForm = (e) => {\n        e.preventDefault();\n         \n        if (leaveReview === !<Ratings />) {\n            setLeaveReview(<Ratings place_id={props.place_id}/>)\n        } else {\n            setLeaveReview(!<Ratings />)\n        }\n    }\n\n    const displayReviews = (e) => {\n        e.preventDefault()\n        //Get reviews from backend\n\n        if (showReviews === !<Reviews />) {\n            setShowReviews(<Reviews place_id={props.place_id}/>)\n        } else {\n            setShowReviews(!<Reviews />)\n        }\n    }\n\n    \n    const layoutHours = () => {\n        if (props.hours === undefined) {\n            return\n        }\n        return (\n            <div>\n                {props.hours[0]}<br/>\n                {props.hours[1]}<br/>\n                {props.hours[2]}<br/>\n                {props.hours[3]}<br/>\n                {props.hours[4]}<br/>\n                {props.hours[5]}<br/>\n                {props.hours[6]}<br/>\n            </div>\n        )\n    }\n    \n\n\n    return (\n        <div className=\"clinic-information\" id={\"clinic|\".concat(props.place_id)}>\n            <p className=\"clinic-name\">{props.name}</p>\n            <p className=\"address\">{props.address}</p>\n            <p className=\"phone\">{props.phone}</p>\n            <p className=\"hours\">{layoutHours()}</p>\n            <a className=\"website\" href={props.website}>Website</a>\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            Average Overall Score<br/>\n            <Rating\n                name={\"overall-score|\".concat(props.place_id)}\n                precision={.1}\n                value={4.45}\n                readOnly\n            />\n            <button className=\"btn btn-primary btn-block leave-review-btn\" onClick={displayReviewForm}>Rate Clinic</button>\n            <button className=\"btn btn-primary btn-block view-review-btn\" onClick={displayReviews}>View Reviews</button>\n            </Box>\n            {leaveReview}\n            {showReviews}\n        </div> \n        \n    )\n}","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\n\nconst NavBar = () => {\n  \n    \n  return (\n    <div className=\"navbar m1-auto\">\n      <h1 className=\"app-name\">COVID Ready</h1>\n      <Link to=\"/login\" onClick={() => localStorage.clear()} className=\"m1-auto\">Log out</Link>\n    </div>\n  );\n};\n\nexport default NavBar;","import React, { Component } from 'react';\nimport { BrowserRouter as Redirect, } from 'react-router-dom';\nimport { Divider } from '@material-ui/core';\n\nimport ClinicInfo from './ClinicInfo';\nimport NavBar from './NavBar';\n\n\n\n\nconst INITIAL_LOCATION = {\n  lat: 37.7749,\n  lng: -122.4194\n}\n\nlet markers = [];\n\nexport default class GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clinics: [],\n      clinicId: [],\n      currentLocation: INITIAL_LOCATION,\n      redirect: null\n    };\n    this.googleMapRef = React.createRef();\n  }\n\n\n  componentDidMount() {\n    const googleMapScript = document.createElement(\"script\");\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyDtkAQdVxlPIJeGjfRUhYRizL35fLxm9V8&libraries=places`;\n    window.document.body.appendChild(googleMapScript);\n\n    this.geolocation = this.getGeoLocation();\n    googleMapScript.addEventListener(\"load\", () => {\n\n      this.googleMap = this.createGoogleMap();\n      this.search = this.createSearchBox();\n      this.places = this.createPlaces();\n    });\n  }\n\n\n  getGeoLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.setState(prevState => ({\n          currentLocation: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          }\n        }))\n      })\n    }\n  }\n\n\n  createGoogleMap = () => {\n    const map = new window.google.maps.Map(this.googleMapRef.current, {\n      zoom: 14,\n      center: this.state.currentLocation,\n      zoomControl: true,\n      mapTypeControl: false,\n      scaleControl: true,\n      streetViewControl: false,\n      rotateControl: false,\n      fullscreenControl: false\n      });\n    return map;\n  }\n\n\n  createSearchBox = () => {\n    const input = document.getElementById('pac-input');\n    const autocomplete = new window.google.maps.places.Autocomplete(input);\n\n    this.googleMap.controls[window.google.maps.ControlPosition.TOP_CENTER].push(input);\n\n    autocomplete.bindTo('bounds', this.googleMap);\n  // Set the data fields to return when the user selects a place.\n    autocomplete.setFields(\n    ['address_components', 'geometry', 'name']);\n\n    autocomplete.addListener('place_changed', () => {\n      const place = autocomplete.getPlace();\n\n      if (!place.geometry) {\n        console.log(\"Returned place contains no geometry\");\n        return;\n      }\n\n      const bounds = new window.google.maps.LatLngBounds();\n\n      if (place.geometry.viewport) {\n        // Only geocodes have viewport.\n        bounds.union(place.geometry.viewport);\n      } else {\n        bounds.extend(place.geometry.location);\n      }\n      this.setState(prevState => ({\n          currentLocation: {\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng()\n          }\n      }))\n      this.deleteMarker();\n      this.createPlaces();\n      this.googleMap.fitBounds(bounds);\n    });\n  }\n\n\n  setMapOnAll = () => {\n    for (let i = 0; i < markers.length; i++) {\n      markers[i].setMap(this.googleMap);\n    }\n  }\n\n\n  deleteMarker = () => {\n    this.setMapOnAll(null);\n    this.setState.markers = [];\n  }\n\n  \n  createPlaces = () => { \n    const request = {\n      query: 'medical clinic',\n      location: this.state.currentLocation\n    };\n\n    //Clear clinic list\n    this.setState({clinics: []})\n\n    const infoWindow = new window.google.maps.InfoWindow();\n\n    //Add markers and window info to each clinic\n    const callback = (results, status) => {\n      \n      if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n\n        for (let i = 0; i < results.length; i++) {\n          const marker = new window.google.maps.Marker({\n            position: { lat: results[i].geometry.location.lat(),\n                         lng: results[i].geometry.location.lng() }\n          });\n\n          marker.addListener('click', () => {\n            infoWindow.setContent(`\n              <div>\n                <p>${results[i].name}</p>\n                <p>${results[i].formatted_address}</p>\n              </div>`)\n            infoWindow.open(this.googleMap, marker);\n          });\n          //Set markers on map\n          marker.setMap(this.googleMap);\n\n          //Create list with details\n          const detailsRequest = {\n            placeId: results[i].place_id,\n            fields: ['name', 'formatted_address', 'formatted_phone_number', 'opening_hours.weekday_text', 'website', 'photo']\n          }\n          \n          const callback = (place, status) => {\n\n            if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n              //ADD CLINIC ID TO PLACE\n              place[\"id\"] = `${detailsRequest[\"placeId\"]}`;\n              //Add clinic info to state\n              const places = this.state.clinics.concat(place);\n              this.setState({clinics: places})\n            }\n          }\n          //KEEP THIS LINE, IT PUSHES TO GLOBAL MARKER TO THEN REMOVE OLD MARKERS\n          markers.push(marker)\n          service.getDetails(detailsRequest, callback);          \n        }\n      }\n    }\n    //KEEP THIS LINE, REMOVES EACH MARKER\n    markers.forEach(function(marker) {\n      marker.setMap(null);\n    });\n    //Create the places service.\n    const service = new window.google.maps.places.PlacesService(this.googleMap);\n    service.textSearch(request, callback);\n  }\n\n  render() {\n\n    // If user ID is not in local storage, direct to login page\n    if (localStorage.length === 0) {\n      return <Redirect to={'/login'} />\n    }\n\n    const clinicInfo = this.state.clinics.map((place) => {\n\n        if (place.opening_hours !== undefined) {\n            return (\n              <div className=\"clinics\">\n                <ul>\n                  <li key={place.id} class=\"clinic-list_item\">\n                    <ClinicInfo name={place.name}\n                                place_id={place.id}\n                                address={place.formatted_address}\n                                phone={place.formatted_phone_number}\n                                hours={place.opening_hours.weekday_text}\n                                website={place.website}\n                                photo={place.photo}/>\n                    <Divider variant=\"middle\"/>\n                  </li>\n                  <Divider variant=\"middle\"/>\n                </ul>\n              </div>\n            )\n        } else {\n            return (\n              <div className=\"clinics\">\n                <ul class=\"clinic-lists\">\n                  <li key={place.id} class=\"clinic-list_item\">\n                    <ClinicInfo name={place.name}\n                                place_id={place.id}\n                                address={place.formatted_address}\n                                phone={place.formatted_phone_number}\n                                website={place.website}/>\n                    <Divider variant=\"middle\"/>\n                  </li>\n                  <Divider variant=\"middle\"/>\n                </ul>\n              </div>\n            )\n        }\n    })\n    \n    return (\n      <div>\n        <NavBar />\n        <div class=\"maps-container\">\n        <input\n            type='text'\n            id=\"pac-input\"\n            placeholder=\"Enter a city\"\n        />\n        <div\n            id=\"map\"\n            className=\"googlemap\"\n            ref={this.googleMapRef}\n            style={{ height: 'auto', width: '500px' }}\n        >\n        </div> \n        <div class=\"col-xs-12 col-md-7 clinic-info\">\n            {clinicInfo}\n        </div>\n      </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\n\nexport default class SignUp extends Component {\n    constructor() {\n        super()\n        this.state = {\n            user_id: '',\n            email: '',\n            password: '',\n            errors: {}\n        }\n\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n    onSubmit = (e) => {\n        e.preventDefault()\n\n        const { history } = this.props;\n\n        const newUser = {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        fetch('/users/register', {\n            method: 'POST',\n            headers:{\n                \"content_type\":\"application/json\",\n            },\n            body: JSON.stringify(newUser),\n        })\n        .then(response => response.json())\n        .then(res => {\n            console.log('Registered')\n\n            localStorage.setItem('user_id', res.user_id);\n            this.setState({loggedIn: true});\n            history.push('/')\n        })\n    }\n\n    onClick = (e) => {\n      e.preventDefault()\n\n      const { history } = this.props;\n      history.push('/login')\n  }\n\n    render() {\n        return (\n          <div className=\"container-signup\">\n              <div className=\"col-md-6 mt-5 mx-auto\">\n                <form noValidate onSubmit={this.onSubmit}>\n                  <h1 className=\"h3 mb-3 font-weight-normal\">Register</h1>\n                \n                  <div className=\"form-group\">\n                    <label htmlFor=\"name\">Username</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"username\"\n                      placeholder=\"Enter a username\"\n                      value={this.state.username}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email address</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      name=\"email\"\n                      placeholder=\"Enter email\"\n                      value={this.state.email}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      value={this.state.password}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-lg btn-primary btn-block\"\n                  >\n                    Register!\n                  </button>\n                  <button \n                        type=\"login\"\n                        className=\"btn btn-lg btn-primary btn-block\"\n                        onClick={this.onClick} \n                    >Login\n                    </button>\n                </form>\n              </div>\n          </div>\n        )\n      }\n    \n}","import React, { Component } from 'react';\n\nimport \"./userlogin.css\"\n\nexport default class UserLogin extends Component {\n    constructor() {\n        super()\n        this.state = {\n            email: '',\n            password: '',\n            user_id: '',\n            loggedIn: false\n        }\n    }\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n\n    onSubmit = (e) => {\n        e.preventDefault()\n\n        const { history } = this.props;\n        const user = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        fetch('users/login', {\n            method: 'POST',\n            headers:{\n                \"content_type\":\"application/json\",\n            },\n            body: JSON.stringify(user),\n        })\n        .then(response => response.json())\n        .then(res => {\n            console.log(res);\n            if (res === \"Invalid\") {\n                console.log(\"Login invalid\")\n                alert('Login invalid')\n            } else {\n            localStorage.setItem('user_id', res.user_id);\n            localStorage.setItem('isLoggedIn', true);\n            this.setState({loggedIn: true, user_id: res.user_id});\n            //Redirect to main page when user is logged in\n            history.push('/')\n            }\n        });\n    }\n\n\n    onClick = (e) => {\n        e.preventDefault()\n\n        const { history } = this.props;\n        history.push('/signup')\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"container-login\">\n              <div className=\"logo\">\n              </div>\n                <form noValidate onSubmit={this.onSubmit}>\n                  <h1 className=\"h3 mb-3 font-weight-normal login-text\">Login</h1>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email address</label>\n                        <input\n                        type=\"email\"\n                        className=\"form-control\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                        value={this.state.email}\n                        onChange={this.onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        value={this.state.password}\n                        onChange={this.onChange}\n                        />\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-lg btn-primary btn-block\"\n                    >\n                        Sign in\n                    </button>\n                    <button \n                        type=\"signup\"\n                        className=\"btn btn-lg btn-primary btn-block\"\n                        onClick={this.onClick} \n                    >Sign Up!\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport GoogleMap from './components/GoogleMap';\nimport SignUp from './components/SignUp';\nimport UserLogin from './components/UserLogin';\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container-app\">\n            <Route exact path=\"/login\" component={UserLogin} />\n            <Switch>\n              <Route exact path=\"/\" component={GoogleMap} />\n              <Route exact path=\"/signup\" component={SignUp} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n      <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}